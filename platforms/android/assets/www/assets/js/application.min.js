var gaWrapper = {};

var googleAnalyticsTrackingId = "UA-3507894-29";

var isNativeApplication = document.URL.indexOf("http://") === -1 && document.URL.indexOf("https://") === -1;

var focusMode = false;

if (!isNativeApplication) {
    (function(i, s, o, g, r, a, m) {
        i["GoogleAnalyticsObject"] = r;
        i[r] = i[r] || function() {
            (i[r].q = i[r].q || []).push(arguments);
        }, i[r].l = 1 * new Date();
        a = s.createElement(o), m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m);
    })(window, document, "script", "//www.google-analytics.com/analytics.js", "ga");
    ga("create", googleAnalyticsTrackingId, "auto");
    ga("send", "pageview");
    gaWrapper = function(send, event, category, action, label) {
        ga(send, event, category, action, label);
    };
} else {
    var cordovaScript = document.createElement("script");
    cordovaScript.setAttribute("src", "cordova.js");
    document.head.appendChild(cordovaScript);
    var deviceReadyCallBack = function() {
        window.analytics.startTrackerWithId(googleAnalyticsTrackingId);
        window.analytics.trackView("pageview");
        $(window).on("scroll", remakeStickyKeyboard);
        var isiOS = navigator.userAgent.indexOf("iPhone") > -1 || navigator.userAgent.indexOf("iPad") > -1;
        setTimeout(function() {
            navigator.splashscreen.hide();
            $(".panzoom-element img").trigger("unveil");
        }, 1e3);
        var remakeStickyKeyboard = function(data, event) {
            if (Keyboard.isVisible) {
                sticky.destroy();
                sticky = new Waypoint.Sticky({
                    element: $(".sticky-holder")[0]
                });
            }
        };
    };
    document.addEventListener("deviceready", deviceReadyCallBack, false);
    gaWrapper = function(send, event, category, action, label) {
        window.analytics.trackEvent(category, action, label);
    };
}

ko.bindingHandlers["ui-accordion"] = {
    init: function(element, valueAccessor, binding, viewModel) {
        $(element).addClass("accordion");
        var children = $(element).children();
        var bodies = $.map(children, function(child) {
            return $(child).children()[1];
        });
        var headers = $.map(children, function(child) {
            return $(child).children()[0];
        });
        $.each(children, function(childIndex, child) {
            var child = $(child);
            var header = $(child.children()[0]);
            header.addClass("toggle");
            var body = $(child.children()[1]);
            header.click(function() {
                $.each(headers, function(headerIndex, otherHeader) {
                    if (headerIndex !== otherHeader) {
                        $(otherHeader).parent().removeClass("selected");
                    }
                });
                $(this).parent().addClass("selected");
                body.slideDown();
                $.each(bodies, function(bodyIndex, otherBody) {
                    if (bodyIndex !== childIndex) {
                        $(otherBody).slideUp();
                    }
                });
            });
        });
        $.each(bodies, function(i, body) {
            if (i !== 0) {
                $(body).hide();
            }
        });
        $.each(children, function(i, child) {
            if (i == 0) {
                $(child).addClass("selected");
            }
        });
    },
    update: function(element, valueAccessor) {}
};

ko.bindingHandlers.toggle = {
    after: [ "value", "attr" ],
    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
        function updateModel() {
            if (isValueArray) {
                var index = ko.utils.arrayIndexOf(underlyingValue, viewModel);
                if (index > -1) {
                    underlyingValue.splice(index, 1);
                } else {
                    underlyingValue.push(viewModel);
                }
                if (isObservable) {
                    modelProperty.valueHasMutated();
                }
            } else {
                if (isObservable && isWritable) {
                    modelProperty(!modelProperty());
                } else {
                    viewModel[modelProperty] = !viewModel[modelProperty];
                }
            }
        }
        var modelProperty = valueAccessor();
        var underlyingValue = ko.utils.unwrapObservable(modelProperty);
        var isValueArray = underlyingValue instanceof Array;
        var isObservable = ko.isObservable(modelProperty);
        var isWritable = ko.isWriteableObservable(modelProperty);
        ko.utils.registerEventHandler(element, "click", updateModel);
    }
};

var tabchange = function(data, event) {
    $(".tabs-primary li").removeClass("selected");
    if (data.page.currentId != "") {
        string = "." + data.page.currentId + "-Tab";
    } else {
        string = "." + data.page.route[data.page.route.length - 2] + "-Tab";
    }
    console.log(" tab change - " + string);
    $(string).addClass("selected");
};

var subtabchange = function(data, event) {
    $(".tabs:not(.tabs-primary) li").removeClass("selected");
    var string = "";
    if (data.page.currentId != "") {
        string = "." + data.page.currentId + "-Tab";
    } else {
        string = "." + data.page.route[data.page.route.length - 2] + "-Tab";
    }
    console.log(" sub tab change - " + string);
    $(string).addClass("selected");
};

var loadTopofPage = function(data, event) {
    $("html, body").animate({
        scrollTop: 0
    });
};

var goBack = function() {
    window.history.back();
};

var panelScrollTop = function(data, event) {
    var offset = $(event.currentTarget).parent().parent().offset().top - 50;
    var winOffset = $(window).scrollTop();
    var newScroll = offset <= winOffset ? offset : 0;
    $(window).scrollTop(newScroll);
};

var pageScrollTop = function(data, event) {
    $(window).scrollTop(0);
};

var panelVisibleToggle = function(data, event) {
    var target = data + " .collapsable-panel";
    $(target).toggle();
};

var panelHide = function(data, event) {
    $(event.currentTarget).parents(".collapsable-panel").hide();
    $(event.currentTarget).parents(".selected").removeClass("selected");
};

var panelShow = function(data, event) {
    var target = data + " .collapsable-panel";
    $(target).show();
};

var listchange = function(data, event) {
    var hash = location.hash;
    $(".nav-list li").each(function() {
        var that = $(this);
        that[$("a", this).attr("href") === hash ? "addClass" : "removeClass"]("selected");
    });
};

var sticky = new Waypoint.Sticky({
    element: $(".sticky-holder")[0]
});

var waypoint = new Waypoint({
    element: $(".shrink-waypoint"),
    handler: function(direction) {
        if (direction == "down") {
            $(".sticky-holder").addClass("shrink");
        } else {
            $(".sticky-holder").removeClass("shrink");
        }
        console.log(direction);
    }
});

var remakeSticky = function(data, event) {
    sticky.destroy();
    sticky = new Waypoint.Sticky({
        element: $(".sticky-holder")[0]
    });
};

var panzoom = function(data, event) {
    var $windowheight = $(window).height() - 50;
    var $scaleZoom = $(".parent.panzoom").width() / $(".panzoom-element img").width();
    var resultZoom = "'scale(" + $scaleZoom + ")'";
    var $panHolder = $(".panzoom-element");
    var $panButtons = $(".panzoom-buttons");
    $(".parent.panzoom").height($windowheight);
    $panHolder.panzoom({
        $zoomIn: $panButtons.find(".zoom-in"),
        $zoomOut: $panButtons.find(".zoom-out"),
        $reset: $panButtons.find(".reset"),
        contain: "invert"
    });
};

var allSelectElements = document.getElementsByTagName("select");

for (var i = 0; i < allSelectElements.length; i++) {
    allSelectElements[i].addEventListener("touchstart", function(e) {
        e.stopPropagation();
    }, false);
}

$(function() {
    $("input").keypress(function(e) {
        var code = e.keyCode ? e.keyCode : e.which;
        if (code === 13 || code === 10) {
            $(this).blur();
            return false;
        }
    });
});

$(window).on("resize", remakeSticky);

window.addEventListener("keyboardDidShow", function() {
    $("#scorebar").slideUp();
});

window.addEventListener("keyboardDidHide", function() {
    $("#scorebar").slideDown();
});

var appData = {};

var glossary = [ {
    label: "Ankle - Brachial Index(ABI)",
    definition: "The ratio of the blood pressure in the ankle compared to blood pressure in the arm,  which can predict peripheral artery disease(PAD). "
}, {
    label: "ASCVD",
    definition: "Heart attack and stroke are usually caused by atherosclerotic cardiovascular disease(ASCVD). ASCVD develops because of a build - up of sticky cholesterol - rich plaque. Over time, this plaque can harden and narrow the arteries. "
}, {
    label: "C-reactive Protein",
    definition: "C-reactive protein (CRP) measures general levels of inflammation in your body.  High levels of CRP are caused by infections and many long-term diseases.  A CRP test,  however,  cannot show where the inflammation is located or what is causing it.  "
}, {
    label: "Cholesterol",
    definition: "Cholesterol is a waxy fat - like substance that travels through the blood.  In and of itself,  cholesterol isn't bad.  It actually helps create the outer coating of our cells and aids the body in making vitamin D and certain hormones. "
}, {
    label: "Coronary Artery Calcium(CAC) Score",
    definition: "A test that shows the presence of plaque or fatty build - up in the heart artery walls. "
}, {
    label: "Coronary Artery Disease",
    definition: "It happens when your coronary arteries--which act like fuel lines to supply blood to the heart--become damaged or diseased.  There is a build-up of fat and cholesterol in the blood that sticks to the inner walls of the arteries (this is also called atherosclerosis).  As this happens,  the arteries can narrow or become blocked.  Keep in mind,  coronary artery disease typically develops over decades; so many people don't even know they have it until it starts causing problems. "
}, {
    label: "Diabetes",
    definition: "When you have type 2 diabetes,  your body does not use or make insulin the way it should.  As a result,  the amount of sugar (glucose) in your blood becomes too high.  Over time,  high blood glucose levels can start to damage the blood vessels in the heart,  eyes,  kidneys,  brain,  and other parts of your body. "
}, {
    label: "HDL",
    definition: "HDL (high-density lipoprotein) cholesterol is sometimes referred to as &quot;good&quot; cholesterol,  because it helps move cholesterol out of the body.  HDL does this by binding with cholesterol in the bloodstream and carrying it back to the liver for disposal.  Higher HDL levels help to lower the risk of cardiovascular disease. "
}, {
    label: "Heart Attack",
    definition: "Your heart muscle needs oxygen and nutrients to work as it should.  A heart attack (your care provider may call it a myocardial infarction) usually occurs when blood flow to the heart is suddenly cut off.  When this happens,  the heart muscle is starved of oxygen-rich blood.  In just a short period of time,  part of the heart can be damaged or die.  That's why immediate care is critical--it can spare your heart and save your life.  If you think you are having a heart attack,  dial 9-1-1 immediately. "
}, {
    label: "High Blood Pressure",
    definition: "Blood pressure is the force of blood moving against the walls of your arteries.  Over time,  elevated blood pressure can weaken your heart,  blood vessels,  kidneys and other parts of your body. "
}, {
    label: "LDL",
    definition: "LDL(low - density lipoprotein) cholesterol is sometimes referred to as &quot;bad &quot;cholesterol. LDL carries mostly fat and only a small amount of protein from the liver to other parts of the body. A higher LDL level is considered a risk factorfor coronary artery disease(CAD) because, under certain conditions, it can cause hardening of the arteries(atherosclerosis). "
}, {
    label: "Metabolic Syndrome",
    definition: "Metabolic syndrome is the combination of high blood pressure, high blood sugar, excess fat around the waist, low HDL( &quot;good&quot;) cholesterol, and high triglycerides. Metabolic syndrome is closely linked to insulin resistance, in which the body cannot use insulin properly. Metabolic syndrome increases your risk for cardiovascular disease, diabetes, and stroke. Weight loss and increased physical activity can help to reduce the risk for metabolic syndrome. "
}, {
    label: "Peripheral Artery Disease(PAD)",
    definition: "Peripheral artery disease (PAD) is a narrowing or blockage of arteries that causes poor blood flow to your legs or arms.  When you walk or exercise,  your leg muscles don't get enough blood and you can get painful cramps. "
}, {
    label: "Statin",
    definition: "Statins are a type of medicine commonly used to treat high cholesterol.  Statins block an enzyme the body needs to produce cholesterol,  thereby lowering the total amount of it in the blood. "
}, {
    label: "Stroke",
    definition: "Your brain is the master control center for your body.  It directs most of what you do--speedily orchestrating your movements,  emotions and ability to think,  talk and learn.  To do this,  your brain needs a steady supply of oxygen and nutrient-rich blood.  That's why if you suffer a stroke--when blood flow to the brain is cut off--brain cells can die very quickly.  Stroke is a leading cause of death and disability in adults.  According to the American Stroke Association,  a stroke occurs every 40 seconds in the United States. "
}, {
    label: "Triglycerides",
    definition: "Triglycerides are a type of fat found in your blood.  Your body uses them for energy.  Some triglycerides are needed for good health. However, high triglycerides may raise your risk of cardiovascular disease and may be a sign of metabolic syndrome. "
} ];

var statins = [ {
    id: "1",
    name: "Atorvastatin (Lipitor&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "--",
        htmlText: "--"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "10 (20) mg",
        htmlText: "<b>10</b> <i>(20)</i> <b>mg</b>"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "(40*)&ndash;80 mg",
        htmlText: "<b>(40<strong>*</strong>)&ndash;80 mg</b>"
    }, {
        name: "Other",
        type: "other",
        value: "other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "14 (Mean plasma elimination) 20-30 (inhibitory activity for HMG-CoA reductase is 20 to 30 hours due to the contribution of active metabolites)"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Any time of day/evening - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "Yes"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "CYP3A4"
    } ]
}, {
    id: "2",
    name: "Fluvastatin (Lescol&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "20&ndash;40 mg",
        htmlText: "<i>20&ndash;40 mg</i>"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "40 mg BID",
        htmlText: "<b>40 mg</b> BID"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "--",
        htmlText: "--"
    }, {
        name: "Other",
        type: "other",
        value: "other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "3"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Evening/bedtime - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "No"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "(75%) CYP2C9; (5%) CYP2C8; and 20% CYP3A4"
    } ]
}, {
    id: "3",
    name: "Fluvastatin XL (Lescol XL&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "--",
        htmlText: "--"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "80 mg ",
        htmlText: "<i>80 mg</i>"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "--",
        htmlText: "--"
    }, {
        name: "Other",
        type: "other",
        value: "other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "9"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Any time of day/evening-food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "No"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "(75%) CYP2C9; (5%) CYP2C8; and 20% CYP3A4"
    } ]
}, {
    id: "4",
    name: "Lovastatin (Mevacor&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "20 mg",
        htmlText: "<b>20 mg</b>"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "40 mg",
        htmlText: "<b>40 mg</b>"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "--",
        htmlText: "--"
    }, {
        name: "Other",
        type: "other",
        value: "Other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "1. 1-1. 7"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Evening/bedtime - Food required except for Altoprev extended-release formulation"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "Yes"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "CYP3A4"
    } ]
}, {
    id: "5",
    name: "Pitavastatin (Livalo&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "1 mg",
        htmlText: "<i>1 mg</i>"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "2-4 mg",
        htmlText: "<i>2-4 mg</i>"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "--",
        htmlText: "--"
    }, {
        name: "Other",
        type: "other",
        value: "Other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "12"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Any time of day/evening - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "No"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "Minimal CYP2C9 and CYP2C8"
    } ]
}, {
    id: "6",
    name: "Pravastatin (Pravachol&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "10&ndash;20 mg",
        htmlText: "<b>10&ndash;20 mg</b>"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "40 (80) mg",
        htmlText: "<b>40 (80)</b> mg"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "--",
        htmlText: "--"
    }, {
        name: "Other",
        type: "other",
        value: "Other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "1. 8"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "No"
    }, {
        name: "Optimal way to take Time of day Food required?",
        type: "timeofday",
        value: "Any time of day/evening - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "No"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "Minimal CYP450 metabolism"
    } ]
}, {
    id: "7",
    name: "Rosuvastatin (Crestor&reg;)",
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "--",
        htmlText: "--"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "(5) 10mg",
        htmlText: "<i>(5)</i> <b>10 mg</b>"
    }, {
        name: "High Intensity Dose",
        type: "dosehigh",
        value: "20 (40)mg",
        htmlText: "<b>20</b> <i>(40)</i> <b>mg</b>"
    }, {
        name: "Other",
        type: "other",
        value: "other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "19"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "No"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Any time of day/evening - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "No"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "Minimal CYP2C9"
    } ]
}, {
    id: "8",
    name: "Simvastatin (Zocor&reg;)",
    alert: [ {
        dose: "80",
        warning: "Simvastatin &ndash; Initiation at 80mg daily or increase of up to 80mg daily may cause harm (III,  A). "
    } ],
    dose: [ {
        name: "Low Intensity Dose",
        type: "doselow",
        value: "10 mg",
        htmlText: "<i>10 mg</i>"
    }, {
        name: "Moderate Intensity Dose",
        type: "dosemedium",
        value: "20-40** mg",
        htmlText: "<b>20-40<strong>**</strong> mg</b>"
    }, {
        name: "Other",
        type: "other",
        value: "other",
        htmlText: "Only the doses above are covered in Cholesterol Guideline"
    } ],
    characteristics: [ {
        name: "Half-life (h)",
        type: "halflife",
        value: "1. 9"
    }, {
        name: "Lipophilic?",
        type: "lipophilic",
        value: "Yes"
    }, {
        name: "Optimal Frequency",
        type: "timeofday",
        value: "Evening/bedtime - Food not required"
    }, {
        name: "P-glycoprotein substrate?",
        type: "pglycoprotein",
        value: "Yes"
    }, {
        name: "Pregnancy Category X",
        type: "pregnancy",
        value: "Yes"
    }, {
        name: "Primary Metabolism",
        type: "metabolism",
        value: "CYP3A4"
    } ]
} ];

var formData = {
    sex: [ {
        label: "Male",
        value: "m"
    }, {
        label: "Female",
        value: "f"
    } ],
    infotext: {
        scorebar: {
            text: "Optimal risk factors include: Total cholesterol of 170 mg/dL (4.40 mmol/L), HDL-cholesterol of 50 mg/dL (1.30 mmol/L), Systolic BP of 110 mm Hg, Not taking medications for hypertension, Not a diabetic, Not a smoker"
        }
    },
    race: [ {
        label: "White",
        value: "wh"
    }, {
        label: "African American",
        value: "aa"
    }, {
        label: "Other",
        value: "o"
    } ],
    notifications: {
        blank: [ {
            status: "",
            message: ""
        } ],
        sex: [ {
            status: "warning",
            message: "Sex is Missing"
        } ],
        age: [ {
            id: 0,
            status: "warning",
            message: "Age is Missing"
        }, {
            id: 1,
            status: "error",
            message: "Must enter age between 20-79 years"
        }, {
            id: 2,
            status: "highlighted",
            message: "This calculator only provides 10-year risk estimates for individuals 40 to 79 years of age."
        }, {
            id: 3,
            status: "highlighted",
            message: "Lifetime Risk Calculator only provides lifetime risk estimates for individuals 20 to 59 years of age."
        } ],
        race: [ {
            status: "warning",
            message: "Race is Missing"
        }, {
            status: "highlighted",
            message: "See the Estimate Warning below"
        } ],
        totalCholesterol: [ {
            status: "warning",
            message: "Total Cholesterol is Missing"
        }, {
            status: "error",
            message: "Must enter Total Cholesterol between 130 - 320 mg/dL"
        }, {
            status: "error",
            message: "Must enter Total Cholesterol between 3.367 - 8.288 mmol/L"
        } ],
        hdlCholesterol: [ {
            status: "warning",
            message: "HDL-Cholesterol is Missing"
        }, {
            status: "error",
            message: "Must enter HDL-Cholesterol between  20 - 100 mg/dL"
        }, {
            status: "error",
            message: "Must enter HDL-Cholesterol between0.518 - 2.59 mmol/L"
        } ],
        bloodPresure: [ {
            status: "warning",
            message: "Systolic Blood Pressure is Missing"
        }, {
            status: "error",
            message: "Must enter Systolic Blood Pressure between 90-200 mm Hg"
        } ],
        allData: [ {
            status: "warning",
            message: "There is missing data. The inputs below have been highlighted."
        }, {
            status: "error",
            message: "There are errors on the page.  The inputs below have been highlighted."
        } ]
    },
    recommendationText: {
        YHM: {
            title: "Consider High-Intensity Statin",
            tag: "REC Consider High",
            param: "Risk >= 7.5 & Diabetic, Age 40-75",
            content: "<p>It is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)</p><p> Moderate-intensity statin therapy should be initiated or continued for adults 40 to 75 years of age with diabetes mellitus. (I A)</p><p> High-intensity statin therapy is reasonable for adults 40 to 75 years of age with diabetes mellitus with a &#8805;7.5% estimated 10-year ASCVD risk unless contraindicated. (IIa B)</p>",
            ldlcontent: '<h2>Response to LDL-lowering Therapy</h2><h3> Monitoring</h3><p> Monitor response of patient to high intensity statin therapy in combination with adherence to lifestyle recommendations.</p><h3> Anticipated Response</h3><p> If during the course of therapy, patient achieves anticipated response to therapy, with &ge; 50% reduction in LDL-C (and may consider on-treatment LDL-C &lt; 100 mg/dL or non-HDL-C &lt; 130 mg/dL), it is reasonable to continue current therapy and continue to monitor adherence to medications and lifestyle, and ongoing LDL-C response to therapy.</p><h3> Less-Than-Anticipated Response</h3><ul><li> If patient with diabetes has a less-than-anticipated response on maximally tolerated statin, with &lt; 50% reduction in LDL-C (and may consider on treatment LDL-C &ge; 100 mg/dL or non-HDL-C &ge; 130 mg/dL), intensification of lifestyle modification should be addressed and statin adherence should be evaluated, including the number of missed statin doses per month and consideration of barriers to adherence. Other major ASCVD risk factors, including tobacco use and elevated blood pressure, should be addressed and controlled as well.</li><li> If, after these interventions, the patient still has less-than-anticipated response (&lt; 50% reduction in LDL-C (and may consider on treatment LDL-C &ge; 100 mg/dL or non-HDL-C &ge; 130 mg/dL), additional clinical approaches may be warranted. The clinician and patient should enter into a discussion focused on shared decision making regarding the addition of a non-statin medication to the current regimen.</li><li> For full guidance and next steps, please see the 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk.</li></ul><p> <a class="link" target="_blank" href="http://content.onlinejacc.org/article.aspx?articleid=2510936"> 1 Lloyd-Jones DM, Morris PB, Ballantyne CM, et al. 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk: A Report of the American College of Cardiology Task Force on Clinical Expert Consensus Documents. <i> J Am Coll Cardiol. </i> 2016;():. doi:10.1016/j.jacc.2016.03.519. </a></p>',
            email: "Moderate-intensity statin therapy should be initiated or continued for adults 40 to 75 years of age with diabetes mellitus. (I A) High-intensity statin therapy is reasonable for adults 40 to 75 years of age with diabetes mellitus with a ≥7.5% estimated 10-year ASCVD risk unless contraindicated. (IIa B) It is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)"
        },
        YLM: {
            title: "Moderate-Intensity Statin Recommended ",
            tag: "REC Yes Moderate",
            param: "Risk < 7.5 & Diabetic, Age 40-75",
            content: "<p>It is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)</p><p> Moderate-intensity statin therapy should be initiated or maintained for adults 40 to 75 years of age with diabetes mellitus. (I A)</p>",
            ldlcontent: '<h2>Response to LDL-lowering Therapy</h2><h3>Monitoring</h3><p> Monitor response of patient to moderate-intensity statin therapy in combination with adherence to lifestyle recommendations.</p><h3>Anticipated Response</h3><p> If during the course of therapy, patient achieves anticipated response to therapy, with 30%-49% reduction in LDL-C (and may consider LDL-C &lt; 100 mg/dL or non-HDL-C &lt; 130 mg/dL), it is reasonable to continue current therapy and continue to monitor adherence to medications and lifestyle, and ongoing LDL-C response to therapy.</p><h3>Less-Than-Anticipated Response</h3><ul><li> If patient with diabetes has less-than-anticipated response, with &lt; 30% reduction in LDL-C (and may consider on treatment LDL-C &ge; 100 mg/dL or non-HDL-C &ge; 130 mg/dL), intensification of lifestyle modification should be addressed and statin adherence should be evaluated, including the number of missed statin doses per month and consideration of barriers to adherence. Other major ASCVD risk factors, including tobacco use and elevated blood pressure, should be addressed and controlled as well.</li><li> If, after these interventions, the patient still has less-than-anticipated response, with &lt; 30% reduction in LDL-C (and may consider on treatment LDL-C &ge; 100 mg/dL or non-HDL-C &ge; 130 mg/dL), the patient and clinician may consider increasing the statin dose to a high-intensity statin.</li><li> If patient still has a less-than-anticipated response on maximally-tolerated statin, with &lt; 30% reduction in LDL-C (and may consider on treatment LDL-C &ge; 100 mg/dL or non-HDL-C &ge; 130 mg/dL), additional clinical approaches may be warranted. The clinician and patient should enter into a discussion focused on shared decision making regarding the addition of a non-statin medication to the current regimen.</li><li> For full guidance, please see the 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk.</li></ul><p> <a class="link" target="_blank" href="http://content.onlinejacc.org/article.aspx?articleid=2510936"> 1 Lloyd-Jones DM, Morris PB, Ballantyne CM, et al. 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk: A Report of the American College of Cardiology Task Force on Clinical Expert Consensus Documents. <i> J Am Coll Cardiol. </i> 2016;():. doi:10.1016/j.jacc.2016.03.519. </a></p>',
            email: "Moderate-intensity statin therapy should be initiated or contained for adults 40 to 75 yeras of age with diabetes mellitus. (I A) It is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)"
        },
        Y_H: {
            title: "Not In A Statin Benefit Group Due To Age > 75 Years",
            tag: "REC No Over 75yrs and Diabetic",
            content: "<p> In adults with diabetes mellitus, who are &lt;40 or &gt;75 years of age, it is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)</p>",
            ldlcontent: "",
            email: "In adults with diabetes mellitus, who are <40 or >75 years of age, it is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)"
        },
        Y_L: {
            title: "Not In A Statin Benefit Group Due To Age <40 Years",
            tag: "REC No Under 40yrs and Diabetic",
            content: "<p> In adults with LDL-C &lt; 190 mg/dL who are not otherwise identified in a statin benefit group, or for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making. In these individuals, statin therapy for primary prevention may be considered after evaluation of the potential for ASCVD risk-reduction benefits, adverse effects, and drug- drug interactions and consider patient preferences. (IIb C)</p><p> Additional factors to consider may include primary LDL-C &#8805;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset &lt;55 years of age in a first degree male relative or &lt;65 years of age in a first degree female relative, high-sensitivity C-reactive protein &#8805;2 mg/L (19.05nmol/L), CAC score &#8805;300 Agatston units or &#8805;75 percentile for age, sex, and ethnicity, ankle-brachial index &lt;0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C)</p><p> In adults with diabetes mellitus, who are &lt;40 or &gt;75 years of age, it is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)</p>",
            ldlcontent: "",
            email: "In adults with diabetes mellitus, who are <40 or >75 years of age, it is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)"
        },
        NHM: {
            title: "Moderate to High-Intensity Statin Recommended",
            tag: "REC Yes Mod to High",
            param: ">= 7.5% Risk, No Diabetic, Age 40-75",
            content: "<p>It is reasonable to evaluate the potential for ASCVD benefits and for adverse effects, for drug-drug interactions, and to consider patient preferences when deciding to initiate, continue, or intensify statin therapy. (IIa C)</p><p> Adults 40 to 75 years of age with LDL-C 70 to 189 mg/dL (1.81 - 4.9 mmol/L) with no diabetes and estimated 10-year ASCVD risk ≥7.5% should be treated with moderate to high-intensity statin therapy. (I A)</p><p> Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C)</p><p> In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making. These factors may include primary LDL–C &ge;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset &lt;55 years of age in a first degree male relative or &lt;65 years of age in a first degree female relative, high-sensitivity C-reactive protein &ge;2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index &lt;0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future.(IIb C)</p>",
            ldlcontent: '<h2>Response to LDL-lowering Therapy</h2><h3>Monitoring</h3><p>Monitor response of patient to maximally-tolerated statin therapy in combination with adherence to lifestyle recommendations.</p><p> Several high-risk markers that may be informative when considering treatment for primary prevention patients with 10-year ASCVD risk &ge;&nbsp;7.5% but without diabetes include: 10-year ASCVD risk &gt;&nbsp;20%; primary LDL-C &ge;&nbsp;160 mg /dL at baseline; other major ASCVD risk factor(s) that are poorly controlled; family history of premature ASCVD with or without elevated lipoprotein(a); evidence of accelerated subclinical atherosclerosis (e.g., coronary artery calcification); elevated hs-CRP; and other risk-modifying conditions, such as CKD, HIV, and chronic inflammatory disorders.</p><h3>Anticipated Response</h3><p> If during the course of therapy, patient achieves anticipated response to therapy, with 30%-49% reduction in LDL-C (and may consider LDL-C &lt;&nbsp;100 mg/dL), it is reasonable to continue current therapy and continue to monitor adherence to medications and lifestyle, and ongoing LDL-C response to therapy.</p><h3>Less-Than-Anticipated Response</h3><ul><li> If a patient has a less-than-anticipated response to moderate-intensity statin therapy, with &lt;&nbsp;30% reduction in LDL-C (and may consider LDL-C &ge;&nbsp;100 mg/dL) or has high risk markers, additional clinical approaches are warranted. First, the clinician and patient should address statin adherence by assessing the number of missed statin doses per month and evaluating any barriers to adherence. Patients unable to tolerate even a moderate-intensity statin should be evaluated for statin intolerance and considered for referral to a lipid specialist. The clinician and patient should attempt to intensify lifestyle modification and soluble dietary fibers; phytosterols may be considered as part of this approach. Other major ASCVD risk factors, including tobacco use and elevated blood pressure, should be addressed and controlled as well.</li><li> If, after these interventions, the patient still has less-than-anticipated response to a moderate intensity statin with &lt;&nbsp;30% reduction in LDL-C (and may consider LDL-C &ge;&nbsp;100 mg/dL) the statin dose should be increased to a high-intensity statin (if this has not already been done), especially if high-risk markers are present.</li><li> If escalation to high-intensity statin (or initial high-intensity statin therapy) does not result in &ge;&nbsp;50% reduction in LDL-C (and may consider LDL-C &lt;&nbsp;100 mg/dL) and if high-risk markers are present, the clinician and patient should enter into a discussion focused on shared decision making regarding the addition of a non-statin medication to their regimen.</li><li> For full guidance, please see the 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk.</li></ul><p> <a class="link" target="_blank" href="http://content.onlinejacc.org/article.aspx?articleid=2510936"><sup>1</sup>Lloyd-Jones DM, Morris PB, Ballantyne CM, et al. 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk: A Report of the American College of Cardiology Task Force on Clinical Expert Consensus Documents. <i> J Am Coll Cardiol. </i> 2016;():. doi:10.1016/j.jacc.2016.03.519. </a></p>',
            email: "Adults 40 to 75 years of age with LDL-C 70 to 189 mg/dL (1.81 - 4.9 mmol/L) with no diabetes and estimated 10-year ASCVD risk ≥7.5% should be treated with moderate to high-intensity statin therapy. (I A) Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C) In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making.  These factors may include primary LDL–C &ge;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset <55 years of age in a first degree male relative or <65 years of age in a first degree female relative, high-sensitivity C-reactive protein >2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index <0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future.(IIb C)"
        },
        NMM: {
            title: "Consider Moderate-Intensity Statin",
            tag: "REC Consider Mod",
            content: "<p> It is reasonable to offer treatment with a moderate-intensity statin to adults 40 to 75 years of age with no diabetes and 10-year risk of of &gt;5% to &lt;7.5%. (IIa B) </p> <p> Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C) </p> <p> In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making. These factors may include primary LDL–C ≥160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset &lt;55 years of age in a first degree male relative or &lt;65 years of age in a first degree female relative, high-sensitivity C-reactive protein ≥2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index &lt;0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C) </p>",
            ldlcontent: '<h2> Response to LDL-lowering Therapy</h2><h3> Monitoring</h3><p> Monitor response of patient with to moderate intensity statin therapy in combination with adherence to lifestyle recommendations.</p><p> Several high-risk markers that may be informative when considering treatment for primary prevention patients with 10-year ASCVD risk &gt;7.5% but without diabetes , include: 10-year ASCVD risk &gt; 20%; primary LDL-C &gt; 160 mg /dL at baseline; other major ASCVD risk factor(s) that are poorly controlled; family history of premature ASCVD with or without elevated lipoprotein(a); evidence of accelerated subclinical atherosclerosis (e.g., coronary artery calcification); elevated hs-CRP; and other risk-modifying conditions, such as CKD, HIV, and chronic inflammatory disorders.</p><h3> Anticipated Response</h3><p> If during the course of therapy, patient achieves anticipated response to therapy, with a 30% to &lt;50% reduction in LDL-C (and may consider LDL-C &lt;100 mg/dL), it is reasonable to continue current therapy and continue to monitor adherence to medications and lifestyle, and ongoing LDL-C response to therapy.</p><h3> Less-Than-Anticipated Response</h3><ul><li> If a patient has a less-than-anticipated response to statin therapy, with &lt;30% reduction in LDL-C (and may consider LDL-C &gt; 100 mg/dL) or has &gt; 1 high risk markers, additional clinical approaches are warranted. First, the clinician and patient should address statin adherence by assessing the number of missed statin doses per month and evaluating any barriers to adherence. Patients unable to tolerate even a moderate-intensity statin should be evaluated for statin intolerance and considered for referral to a lipid specialist. The clinician and patient should attempt to intensify lifestyle modification and soluble dietary fibers; phytosterols may be considered as part of this approach. Other major ASCVD risk factors, including tobacco use and elevated blood pressure, should be addressed and controlled as well.</li><li> If, after these interventions, the patient still has less-than-anticipated response to a moderate intensity statin &lt;30% reduction in LDL-C (and may consider LDL-C &gt; 100 mg/dL) the statin should be increased to a high-intensity statin (if this has not already been done), especially if high-risk markers are present.</li><li> If escalation to high-intensity statin (or initial high-intensity statin therapy) does not result in &gt;50% reduction in LDL-C (and may consider LDL-C &#8805;100 mg/dL) and if high-risk markers are present, the clinician and patient should enter into a discussion focused on shared decision making regarding the addition of a non-statin medication to their regimen.</li><li> For full guidance, please see the 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk.</li></ul><p> <a class="link" target="_blank" href="http://content.onlinejacc.org/article.aspx?articleid=2510936"> 1 Lloyd-Jones DM, Morris PB, Ballantyne CM, et al. 2016 ACC Expert Consensus Decision Pathway on the Role of Non-Statin Therapies for LDL-Cholesterol Lowering in the Management of Atherosclerotic Cardiovascular Disease Risk: A Report of the American College of Cardiology Task Force on Clinical Expert Consensus Documents. <i> J Am Coll Cardiol. </i> 2016;():. doi:10.1016/j.jacc.2016.03.519. </a></p>',
            email: "It is reasonable to offer treatment with a moderate-intensity statin to adults 40 to 75 years of age with no diabetes and 10-year risk of of 5% to >7.5%. (IIa B)Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C) In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making.  These factors may include primary LDL-C &ge;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset <55 years of age in a first degree male relative or <65 years of age in a first degree female relative, high-sensitivity C-reactive protein ≥2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index <0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C)"
        },
        N_H: {
            title: "Not In Statin Benefit Group Due To Age > 75 Years",
            tag: "REC No Over 75yrs",
            content: "<p>Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C) </p> ",
            ldlcontent: "",
            email: "Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C)"
        },
        NL_: {
            title: "Not In Statin Benefit Group Due To 10-Year ASCVD Risk <5%",
            tag: "REC No 10yr Risk Over 5",
            content: "<p>In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making.  These factors may include primary LDL&ndash;C &#8805;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset &lt;55 years of age in a first degree male relative or &lt;65 years of age in a first degree female relative, high-sensitivity C-reactive protein &ge;2 mg/L (19.05nmol/L), CAC score &#8805;300 Agatston units or &#8805;75 percentile for age, sex, and ethnicity, ankle-brachial index &lt;0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C) </p>",
            ldlcontent: "",
            email: "In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making.  These factors may include primary LDL-C &ge;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset <55 years of age in a first degree male relative or <65 years of age in a first degree female relative, high-sensitivity C-reactive protein ≥2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index <0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C)"
        },
        N_L: {
            title: "Not In Statin Benefit Group Due To Age < 40 Years",
            tag: "REC No Under 40yrs",
            content: "<p> In adults with LDL-C &lt; 190 mg/dL who are not otherwise identified in a statin benefit group, or for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making. In these individuals, statin therapy for primary prevention may be considered after evaluation of the potential for ASCVD risk-reduction benefits, adverse effects, and drug– drug interactions and consider patient preferences. (IIb C)</p><p> Additional factors to consider may include primary LDL–C ≥160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset &lt;55 years of age in a first degree male relative or &lt;65 years of age in a first degree female relative, high-sensitivity C-reactive protein ≥2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index &lt;0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C)</p><p> Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C)</p>",
            ldlcontent: "",
            email: "Before initiating statin therapy, it is reasonable for clinicians and patients to engage in a discussion which considers the potential for ASCVD risk reduction benefits and for adverse effects, for drug-drug interactions, and patient preferences for treatment. (IIa C) In individuals for whom after quantitative risk assessment a risk-based treatment decision is uncertain, additional factors may be considered to inform treatment decision making.  These factors may include primary LDL-C &ge;160 mg/dL (4.14 mmol/L) or other evidence of genetic hyperlipidemias, family history of premature ASCVD with onset <55 years of age in a first degree male relative or <65 years of age in a first degree female relative, high-sensitivity C-reactive protein >2 mg/L (19.05nmol/L), CAC score ≥300 Agatston units or ≥75 percentile for age, sex, and ethnicity, ankle-brachial index <0.9, or elevated lifetime risk of ASCVD. Additional factors may be identified in the future. (IIb C)"
        }
    }
};

function formObject(data) {
    var self = this;
    self.$debug = true;
    self.Race = ko.observable();
    self.Age = ko.observable();
    self.Sex = ko.observable();
    self.HDLCholesterolValue = ko.observable();
    self.TotalCholesterolValue = ko.observable();
    self.BloodPressure = ko.observable();
    self.Diabetic = ko.observable(false);
    self.Smoker = ko.observable(false);
    self.Hypertension = ko.observable(false);
    self.UnitOfMeasure = ko.observable(false);
    self.UnitOfMeasure.subscribe(function(newValue) {
        var type = newValue == true ? "si" : "us";
        var hdl = self.HDLCholesterolValue();
        var totc = self.TotalCholesterolValue();
        var m = .0259;
        if (newValue) {
            if (hdl != null) self.HDLCholesterolValue((hdl * m).toFixed(4));
            if (totc != null) self.TotalCholesterolValue((totc * m).toFixed(4));
        } else {
            if (hdl != null) self.HDLCholesterolValue((hdl / m).toFixed(0));
            if (totc != null) self.TotalCholesterolValue((totc / m).toFixed(0));
        }
    });
    self.HDLCholesterol = ko.pureComputed(function() {
        var i = self.HDLCholesterolValue();
        var m = self.UnitOfMeasure() ? .0259 : 1;
        var value = i / m;
        return value;
    }, self);
    self.TotalCholesterol = ko.pureComputed(function() {
        var i = self.TotalCholesterolValue();
        var m = self.UnitOfMeasure() ? .0259 : 1;
        var value = i / m;
        return value;
    }, self);
    self.Age.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.Sex.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.Race.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.BloodPressure.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.Diabetic.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.Smoker.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.Hypertension.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.HDLCholesterol.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.TotalCholesterol.subscribe(function(newValue) {
        self.TenYearRiskCalculations();
    });
    self.computedValuesAvailable = ko.pureComputed(function() {
        if (self.Sex() != null && self.Age() != null && self.Age() >= 20 && self.Age() <= 79 && self.Race() != null && self.HDLCholesterol() != null && self.HDLCholesterol() >= 20 && self.HDLCholesterol() <= 100 && self.BloodPressure() != null && self.BloodPressure() >= 90 && self.BloodPressure() <= 200 && self.TotalCholesterol() != null && self.TotalCholesterol() >= 130 && self.TotalCholesterol() <= 320) {
            if (self.$debug) console.log("Computed Values are available");
            return true;
        } else {
            if (self.$debug) console.log("Computed Values are not available");
            return false;
        }
    }, self);
    self.isRealNumber = function($object) {
        if (!isNaN($object) && $object != null && $object) {
            return true;
        }
        return false;
    };
    self.isAfrican = function() {
        var i = false;
        if (self.Race() == "African American") i = true;
        return i;
    };
    self.isMale = function() {
        var i = false;
        if (self.Sex() == "Male") i = true;
        return i;
    };
    self.isFemale = function() {
        var i = false;
        if (self.Sex() == "Female") i = true;
        return i;
    };
    self.AgeConverted = function() {
        if (self.$debug) console.log(self.Age() + " is the Age");
        return Math.log(self.Age());
    };
    self.AgeSquared = function() {
        return self.AgeConverted() * self.AgeConverted();
    };
    self.HDLCholesterolConverted = function() {
        return Math.log(self.HDLCholesterol());
    };
    self.TotalCholesterolConverted = function() {
        return Math.log(self.TotalCholesterol());
    };
    self.agetc = function() {
        return self.TotalCholesterolConverted() * self.AgeConverted();
    };
    self.agehdl = function() {
        return self.HDLCholesterolConverted() * self.AgeConverted();
    };
    self.agetsbp = function() {
        return self.AgeConverted() * self.trlnsbp();
    };
    self.agentsbp = function() {
        return self.AgeConverted() * self.ntlnsbp();
    };
    self.trlnsbp = function() {
        return Math.log(self.BloodPressure()) * Number(self.Hypertension());
    };
    self.ntlnsbp = function() {
        return Math.log(self.BloodPressure()) * Number(!self.Hypertension());
    };
    self.agesmoke = function() {
        return self.AgeConverted() * Number(self.Smoker());
    };
    self.agedm = function() {
        return self.AgeConverted() * Number(self.Diabetic);
    };
    self.opt_hdl = function() {
        return Math.log(50);
    };
    self.opt_tc = function() {
        return Math.log(170);
    };
    self.opt_agetc = function() {
        return self.opt_tc() * self.AgeConverted();
    };
    self.opt_agehdl = function() {
        return self.opt_hdl() * self.AgeConverted();
    };
    self.opt_agetsbp = function() {
        return self.AgeConverted() * self.opt_trlnsbp();
    };
    self.opt_agentsbp = function() {
        return self.AgeConverted() * self.opt_ntlnsbp();
    };
    self.opt_trlnsbp = function() {
        return Math.log(110) * Number(false);
    };
    self.opt_ntlnsbp = function() {
        return Math.log(110) * Number(!false);
    };
    self.otp_agesmoke = function() {
        return self.AgeConverted() * Number(false);
    };
    self.opt_agedm = function() {
        return self.AgeConverted() * Number(false);
    };
    self.s010 = function() {
        var i;
        if (self.isAfrican() && self.isFemale()) i = .95334;
        if (!self.isAfrican() && self.isFemale()) i = .96652;
        if (self.isAfrican() && self.isMale()) i = .89536;
        if (!self.isAfrican() && self.isMale()) i = .91436;
        return i;
    };
    self.mnxb = function() {
        var i;
        if (self.isAfrican() && self.isFemale()) i = 86.6081;
        if (!self.isAfrican() && self.isFemale()) i = -29.1817;
        if (self.isAfrican() && self.isMale()) i = 19.5425;
        if (!self.isAfrican() && self.isMale()) i = 61.1816;
        return i;
    };
    self.predictCalculate = function() {
        var i;
        if (self.isAfrican() && self.isFemale()) i = 17.1141 * self.AgeConverted() + .9396 * self.TotalCholesterolConverted() + -18.9196 * self.HDLCholesterolConverted() + 4.4748 * self.agehdl() + 29.2907 * self.trlnsbp() + -6.4321 * self.agetsbp() + 27.8197 * self.ntlnsbp() + -6.0873 * self.agentsbp() + .6908 * Number(self.Smoker()) + .8738 * Number(self.Diabetic());
        if (!self.isAfrican() && self.isFemale()) i = -29.799 * self.AgeConverted() + 4.884 * (self.AgeConverted() * self.AgeConverted()) + 13.54 * self.TotalCholesterolConverted() + -3.114 * self.agetc() + -13.578 * self.HDLCholesterolConverted() + 3.149 * self.agehdl() + 2.019 * self.trlnsbp() + 1.957 * self.ntlnsbp() + 7.574 * Number(self.Smoker()) + -1.665 * self.agesmoke() + .661 * Number(self.Diabetic());
        if (self.isAfrican() && self.isMale()) i = 2.469 * self.AgeConverted() + .302 * self.TotalCholesterolConverted() + -.307 * self.HDLCholesterolConverted() + 1.916 * self.trlnsbp() + 1.809 * self.ntlnsbp() + .549 * Number(self.Smoker()) + .645 * Number(self.Diabetic());
        if (!self.isAfrican() && self.isMale()) i = 12.344 * self.AgeConverted() + 11.853 * self.TotalCholesterolConverted() + -2.664 * self.agetc() + -7.99 * self.HDLCholesterolConverted() + 1.769 * self.agehdl() + 1.797 * self.trlnsbp() + 1.764 * self.ntlnsbp() + 7.837 * Number(self.Smoker()) + -1.795 * self.agesmoke() + .658 * Number(self.Diabetic());
        return i;
    };
    self.optimalPredictCalculate = function() {
        var i;
        if (self.isAfrican() && self.isFemale()) i = 17.1141 * self.AgeConverted() + .9396 * self.opt_tc() + -18.9196 * self.opt_hdl() + 4.4748 * self.opt_agehdl() + 29.2907 * self.opt_trlnsbp() + -6.4321 * self.opt_agetsbp() + 27.8197 * self.opt_ntlnsbp() + -6.0873 * self.opt_agentsbp() + .6908 * Number(false) + .8738 * Number(false);
        if (!self.isAfrican() && self.isFemale()) i = -29.799 * self.AgeConverted() + 4.884 * self.AgeSquared() + 13.54 * self.opt_tc() + -3.114 * self.opt_agetc() + -13.578 * self.opt_hdl() + 3.149 * self.opt_agehdl() + 2.019 * self.opt_trlnsbp() + 1.957 * self.opt_ntlnsbp() + 7.574 * Number(false) + -1.665 * self.otp_agesmoke() + .661 * Number(false);
        if (self.isAfrican() && self.isMale()) i = 2.469 * self.AgeConverted() + .302 * self.opt_tc() + -.307 * self.opt_hdl() + 1.916 * self.opt_trlnsbp() + 1.809 * self.opt_ntlnsbp() + .549 * Number(false) + .645 * Number(false);
        if (!self.isAfrican() && self.isMale()) i = 12.344 * self.AgeConverted() + 11.853 * self.opt_tc() + -2.664 * self.opt_agetc() + -7.99 * self.opt_hdl() + 1.769 * self.opt_agehdl() + 1.797 * self.opt_trlnsbp() + 1.764 * self.opt_ntlnsbp() + 7.837 * Number(false) + -1.795 * self.otp_agesmoke() + .658 * Number(false);
        return i;
    };
    self.TenYearRiskCalculations = function() {
        var valuesAvailable = false;
        if (self.Sex() != null && self.Age() != null && self.Age() >= 20 && self.Age() <= 79 && self.Race() != null && self.HDLCholesterol() != null && self.HDLCholesterol() >= 20 && self.HDLCholesterol() <= 100 && self.BloodPressure() != null && self.BloodPressure() >= 90 && self.BloodPressure() <= 200 && self.TotalCholesterol() != null && self.TotalCholesterol() >= 130 && self.TotalCholesterol() <= 320) {
            valuesAvailable = true;
        }
        if (self.$debug) console.log("Values are available == " + valuesAvailable);
        if (self.$debug) console.log("ten year risk calculate");
        if (valuesAvailable) {
            if (self.$debug) console.log("I am calculating Risk");
            self.predict(self.predictCalculate());
            self.optimalPredict(self.optimalPredictCalculate());
        } else {
            if (self.$debug) console.log("I have set Risk to null");
            self.predict(null);
            self.optimalPredict(null);
        }
    };
    self.predict = ko.observable();
    self.optimalPredict = ko.observable();
    self.cvdPredict = ko.pureComputed(function() {
        if (self.computedValuesAvailable()) {
            return 1 - Math.pow(this.s010(), Math.exp(this.predict() - this.mnxb()));
        }
        return NaN;
    }, self);
    self.optimalCvdPredict = ko.pureComputed(function() {
        if (self.computedValuesAvailable()) {
            return 1 - Math.pow(this.s010(), Math.exp(this.optimalPredict() - this.mnxb()));
        }
        return NaN;
    }, self);
    self.TenYearRisk = ko.pureComputed(function() {
        var i = "~%";
        if (self.cvdPredict() != 1 && !isNaN(self.cvdPredict())) {
            var number = self.cvdPredict() * 100;
            i = number.toFixed(1) + "%";
        }
        return i;
    }, self);
    self.TenYearOptimal = ko.pureComputed(function() {
        var i = "~%";
        if (self.optimalCvdPredict() != 1 && !isNaN(self.optimalCvdPredict())) {
            var number = self.optimalCvdPredict() * 100;
            i = number.toFixed(1) + "%";
        }
        return i;
    }, self);
    self.major = ko.pureComputed(function() {
        var i = (self.TotalCholesterol() >= 240 ? 1 : 0) + (self.BloodPressure() >= 160 ? 1 : 0) + (self.Hypertension() ? 1 : 0) + (self.Smoker() ? 1 : 0) + (self.Diabetic() ? 1 : 0);
        return i;
    }, self);
    self.elevated = ko.pureComputed(function() {
        var i = ((self.TotalCholesterol() >= 200 && self.TotalCholesterol() < 240 ? 1 : 0) + (self.BloodPressure() >= 140 && self.BloodPressure() < 160 && self.Hypertension() == false ? 1 : 0) >= 1 ? 1 : 0) * (self.major() == 0 ? 1 : 0);
        return i;
    }, self);
    self.allOptimal = ko.pureComputed(function() {
        var i = ((self.TotalCholesterol() < 180 ? 1 : 0) + (self.BloodPressure() < 120 ? 1 : 0) * (self.Hypertension() ? 0 : 1) == 2 ? 1 : 0) * (self.major() == 0 ? 1 : 0);
        return i;
    }, self);
    self.notOptimal = ko.pureComputed(function() {
        var i = ((self.TotalCholesterol() >= 180 && self.TotalCholesterol() < 200 ? 1 : 0) + (self.BloodPressure() >= 120 && self.BloodPressure() < 140 && self.Hypertension() == false ? 1 : 0)) * (self.elevated() == 0 ? 1 : 0) * (self.major() == 0 ? 1 : 0) >= 1 ? 1 : 0;
        return i;
    }, self);
    self.lifeTimeRisk = ko.pureComputed(function() {
        i = "~%";
        if (self.Sex() != null || self.Sex() != undefined) {
            i = self.Sex() == "Male" ? "5%" : "8%";
        }
        return i;
    }, self);
    self.yourLifeTimeRisk = ko.pureComputed(function() {
        var i = "~";
        if (self.major() > 1) i = self.lookupASCVD("major2");
        if (self.major() == 1) i = self.lookupASCVD("major1");
        if (self.elevated() == 1) i = self.lookupASCVD("elevated");
        if (self.notOptimal() == 1) i = self.lookupASCVD("notOptimal");
        if (self.allOptimal() == 1) i = self.lookupASCVD("allOptimal");
        return i + "%";
    }, self);
    self.lookupASCVD = function(category) {
        if (self.Sex() != null) return eval("self.ascvdTable." + self.Sex().toLowerCase() + "." + category + "");
        return "~";
    };
    self.ascvdTable = {
        female: {
            major2: 50,
            major1: 39,
            elevated: 39,
            notOptimal: 27,
            allOptimal: 8
        },
        male: {
            major2: 69,
            major1: 50,
            elevated: 46,
            notOptimal: 36,
            allOptimal: 5
        }
    };
}

function viewModel() {
    var self = this;
    self.$debug = true;
    self.FormData = formData;
    self.AppData = appData;
    self.Statins = ko.observableArray(statins);
    self.Glossary = glossary;
    self.glossaryItems = ko.observableArray();
    for (var i in self.Glossary) {
        self.glossaryItems.push(self.Glossary[i]);
    }
    self.glossaryQuery = ko.observable("");
    self.Form = ko.observable(new formObject());
    self.glossaryQuery.subscribe(function(value) {
        self.glossaryItems.removeAll();
        for (var i in self.Glossary) {
            if (self.Glossary[i].label.toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                self.glossaryItems.push(self.Glossary[i]);
            }
        }
    });
    self.validate = ko.observable(false);
    self.sexValidation = ko.pureComputed(function() {
        if (self.Form().Sex() == null && self.validate() == true) {
            return self.FormData.notifications.sex[0];
        } else {
            return self.FormData.notifications.blank[0];
        }
    }, self);
    self.ageValidation = ko.pureComputed(function() {
        if (self.Form().Age() == null && self.validate() == true) {
            return self.FormData.notifications.age[0];
        } else if (self.Form().Age() != null && (self.Form().Age() > 79 || self.Form().Age() < 20)) {
            return self.FormData.notifications.age[1];
        } else if (self.Form().Age() != null && self.Form().Age() >= 20 && self.Form().Age() < 40) {
            return self.FormData.notifications.age[2];
        } else if (self.Form().Age() != null && self.Form().Age() > 59 && self.Form().Age() <= 79) {
            return self.FormData.notifications.age[3];
        } else {
            return self.FormData.notifications.blank[0];
        }
    }, self);
    self.raceValidation = ko.pureComputed(function() {
        if (self.Form().Race() == null && self.validate() == true) {
            return self.FormData.notifications.race[0];
        } else if (self.Form().Race() != null && self.Form().Race() == "Other") {
            return self.FormData.notifications.race[1];
        } else {
            return self.FormData.notifications.blank[0];
        }
    }, self);
    self.hdlValidation = ko.pureComputed(function() {
        var i = self.FormData.notifications.blank[0];
        if (isNaN(self.Form().HDLCholesterol()) && self.validate() == true) {
            i = self.FormData.notifications.hdlCholesterol[0];
        } else if (self.Form().HDLCholesterol() != null && (self.Form().HDLCholesterol() < 20 || self.Form().HDLCholesterol() > 100)) {
            i = self.Form().UnitOfMeasure() ? self.FormData.notifications.hdlCholesterol[2] : self.FormData.notifications.hdlCholesterol[1];
        } else {
            i = self.FormData.notifications.blank[0];
        }
        return i;
    }, self);
    self.totalCholesterolValidation = ko.pureComputed(function() {
        var i = self.FormData.notifications.blank[0];
        if (isNaN(self.Form().TotalCholesterol()) && self.validate() == true) {
            i = self.FormData.notifications.totalCholesterol[0];
        } else if (self.Form().TotalCholesterol() != null && (self.Form().TotalCholesterol() < 130 || self.Form().TotalCholesterol() > 320)) {
            i = self.Form().UnitOfMeasure() ? self.FormData.notifications.totalCholesterol[2] : self.FormData.notifications.totalCholesterol[1];
        } else {
            i = self.FormData.notifications.blank[0];
        }
        return i;
    }, self);
    self.bloodPresureValidation = ko.pureComputed(function() {
        if (self.Form().BloodPressure() == null && self.validate() == true) {
            return self.FormData.notifications.bloodPresure[0];
        } else if (self.Form().BloodPressure() != null && (self.Form().BloodPressure() < 90 || self.Form().BloodPressure() > 200)) {
            return self.FormData.notifications.bloodPresure[1];
        } else {
            return self.FormData.notifications.blank[0];
        }
    }, self);
    self.isRaceOther = ko.pureComputed(function() {
        if (self.Form().Race() != null) {
            return self.Form().Race() == "Other" ? true : false;
        } else {
            return false;
        }
    }, self);
    self.recommendationUnlock = ko.pureComputed(function() {
        if (self.Form().Sex() != null && self.Form().Age() != null && self.Form().Age() >= 20 && self.Form().Age() <= 79 && self.Form().Race() != null && self.Form().HDLCholesterol() != null && self.Form().HDLCholesterol() >= 20 && self.Form().HDLCholesterol() <= 100 && self.Form().BloodPressure() != null && self.Form().BloodPressure() >= 90 && self.Form().BloodPressure() <= 200 && self.Form().TotalCholesterol() != null && self.Form().TotalCholesterol() >= 130 && self.Form().TotalCholesterol() <= 320) {
            console.log("recommendationUnlock is unlocked");
            return true;
        } else {
            console.log("recommendationUnlock is locked");
            return false;
        }
    }, self);
    self.allDataValidation = ko.pureComputed(function() {
        var i = self.FormData.notifications.blank[0];
        if (self.ageValidation().status == "highlighted") {}
        if (self.validate == true || self.sexValidation().status == "warning" || self.ageValidation().status == "warning" || self.raceValidation().status == "warning" || self.hdlValidation().status == "warning" || self.totalCholesterolValidation().status == "warning" || self.bloodPresureValidation().status == "warning") {
            i = self.FormData.notifications.allData[0];
        }
        if (self.sexValidation().status == "error" || self.raceValidation().status == "error" || self.ageValidation().status == "error" || self.hdlValidation().status == "error" || self.totalCholesterolValidation().status == "error" || self.bloodPresureValidation().status == "error") {
            i = self.FormData.notifications.allData[1];
        }
        remakeSticky();
        return i;
    }, self);
    self.recommendationType = ko.pureComputed(function() {
        var i = "";
        var age = self.Form().Age();
        var cvRisk = null;
        if (self.Form().cvdPredict() != 1 && !isNaN(self.Form().cvdPredict())) {
            var number = self.Form().cvdPredict() * 100;
            cvRisk = number.toFixed(1);
            console.log("cvRisk" + cvRisk);
        }
        if (cvRisk != null) {
            if (self.Form().Diabetic()) {
                if (age > 75) {
                    i = self.FormData.recommendationText.Y_H;
                }
                if (age < 40) {
                    i = self.FormData.recommendationText.Y_L;
                }
                if (age >= 40 && age <= 75) {
                    if (cvRisk < 7.5) {
                        i = self.FormData.recommendationText.YLM;
                    } else {
                        i = self.FormData.recommendationText.YHM;
                    }
                }
            } else {
                if (age >= 40 && age <= 75) {
                    if (cvRisk < 5) {
                        i = self.FormData.recommendationText.NL_;
                    } else if (cvRisk < 7.5 && cvRisk >= 5) {
                        i = self.FormData.recommendationText.NMM;
                    } else {
                        i = self.FormData.recommendationText.NHM;
                    }
                }
                if (age > 75) {
                    i = self.FormData.recommendationText.N_H;
                }
                if (age < 40) {
                    i = self.FormData.recommendationText.N_L;
                }
            }
        }
        return i;
    }, self);
    self.resetAll = function() {
        self.validate(false);
        self.Form().Race(undefined);
        self.Form().Age(undefined);
        self.Form().Sex(null);
        self.Form().HDLCholesterolValue(undefined);
        self.Form().TotalCholesterolValue(undefined);
        self.Form().BloodPressure(undefined);
        self.Form().Diabetic(false);
        self.Form().Smoker(false);
        self.Form().Hypertension(false);
        if ($debug) console.log("Reset");
    };
    self.numberTrim = function(value, unit) {
        var number = value;
        if (number == null) {
            console.log("number Null");
            number = 0;
        }
        number = parseFloat(number).toFixed(4);
        if (!unit) {
            number = parseFloat(number).toFixed(0);
        }
        return number;
    };
}

var appmodel = new viewModel();

pager.Href.hash = "#!/";

pager.extendWithPage(appmodel);

ko.applyBindings(appmodel);

pager.start();

$(".panzoom-element img").unveil();

var getQueryString = function(field, url) {
    var href = url ? url : window.location.href;
    var reg = new RegExp("[?&]" + field + "=([^&#]*)", "i");
    var string = reg.exec(href);
    return string ? string[1] : null;
};

var path = "#!/calulate/estimator/";

var params = pager.page.route[pager.page.route.length - 1];

if (params == undefined) {
    params = "";
} else {
    if (getQueryString("unitofmeasurement") != null && getQueryString("unitofmeasurement") == "true" || getQueryString("unitofmeasurement").toLowerCase() == "si") {
        appmodel.Form().UnitOfMeasure(true);
    }
    if (getQueryString("age") != null) {
        appmodel.Form().Age(getQueryString("age"));
    }
    if (getQueryString("gender") != null) {
        var queryGender = getQueryString("gender");
        console.log(queryGender);
        if (queryGender == "m" || queryGender == "male" || queryGender == "Male") {
            appmodel.Form().Sex("Male");
        } else if (queryGender == "f" || queryGender == "female" || queryGender == "Female") {
            appmodel.Form().Sex("Female");
        }
    }
    if (getQueryString("race") != null) {
        var queryRace = getQueryString("race");
        if (queryRace == "wh") {
            appmodel.Form().Race("White");
        } else if (queryRace == "aa") {
            appmodel.Form().Race("African American");
        } else if (queryRace == "ot") {
            appmodel.Form().Race("Other");
        }
    }
    if (getQueryString("hdlCholesterol") != null) {
        appmodel.Form().HDLCholesterolValue(getQueryString("hdlCholesterol"));
    }
    if (getQueryString("hdl") != null) {
        appmodel.Form().HDLCholesterolValue(getQueryString("hdl"));
    }
    if (getQueryString("totalCholesterol") != null) {
        appmodel.Form().TotalCholesterolValue(getQueryString("totalCholesterol"));
    }
    if (getQueryString("chol") != null) {
        appmodel.Form().TotalCholesterolValue(getQueryString("chol"));
    }
    if (getQueryString("bloodPressure") != null || getQueryString("bp") != null) {
        var bpQuery = getQueryString("bloodPressure") != null ? getQueryString("bloodPressure") : getQueryString("bp");
        appmodel.Form().BloodPressure(bpQuery);
    }
    if (getQueryString("hasDiabetes") != null || getQueryString("diab") != null) {
        var queryDiabetic = getQueryString("hasDiabetes") != null ? getQueryString("hasDiabetes") : getQueryString("diab");
        queryDiabetic == "t" || queryDiabetic == "true" ? appmodel.Form().Diabetic(true) : appmodel.Form().Diabetic(false);
    }
    if (getQueryString("isSmoker") != null || getQueryString("smoker") != null) {
        var smokeQuery = getQueryString("isSmoker") != null ? getQueryString("isSmoker") : getQueryString("smoker");
        smokeQuery == "t" || smokeQuery == "true" ? appmodel.Form().Smoker(true) : appmodel.Form().Smoker(false);
    }
    if (getQueryString("hyp") != null || getQueryString("hasHypertension") != null) {
        var hypeQuery = getQueryString("hyp") != null ? getQueryString("hyp") : getQueryString("hasHypertension");
        hypeQuery == "t" || hypeQuery == "true" ? appmodel.Form().Hypertension(true) : appmodel.Form().Hypertension(false);
    }
    if (appmodel.recommendationUnlock()) {
        path = "#!/calulate/";
        gaWrapper("send", "event", "Primary Function", "Query String", "Full Info Recommendation");
    } else {
        gaWrapper("send", "event", "Navigate", "Query String", "Partial Info No Recommendation");
    }
}

path += params;

console.log(path);

pager.navigate(path);

$("#email").click(function() {
    this.href = "mailto:you@yourdomain.com?subject=ASCVD Risk Estimator Recommendation&body=";
    this.href += getBody();
});

function getBody() {
    gaWrapper("send", "event", "Mailto", "Clicked", "Email");
    var linebreak = "%0D%0A";
    var doublelinebreak = linebreak + linebreak;
    var body = "";
    var unitOfMeasure = appmodel.Form().UnitOfMeasure() ? "(mmol/L)" : "(mg/dL)";
    body += "-- 10 YEAR RISK: " + encodeURIComponent(appmodel.Form().TenYearRisk()) + " -- ";
    body += "LIFETIME RISK: " + encodeURIComponent(appmodel.Form().yourLifeTimeRisk()) + " --" + doublelinebreak;
    body += "--RECOMMENDATION--" + doublelinebreak;
    body += encodeURIComponent(appmodel.recommendationType().title) + doublelinebreak;
    body += "--PATIENT INFORMATION--" + linebreak;
    body += "DEMOGRAPHICS" + linebreak;
    body += " %E2%80%A2 Sex: " + appmodel.Form().Sex() + linebreak;
    body += " %E2%80%A2 Race: " + appmodel.Form().Race() + linebreak;
    body += " %E2%80%A2 Age: " + appmodel.Form().Age() + linebreak;
    body += linebreak;
    body += "LABS" + linebreak;
    body += " %E2%80%A2 Total Chol: " + appmodel.Form().TotalCholesterolValue() + unitOfMeasure + linebreak;
    body += " %E2%80%A2 HDL Chol: " + appmodel.Form().HDLCholesterolValue() + unitOfMeasure + linebreak;
    body += " %E2%80%A2 Systolic Blood Pressure: " + appmodel.Form().BloodPressure() + linebreak;
    body += linebreak;
    body += "PERSONAL HISTORY" + linebreak;
    body += " %E2%80%A2 Diabetic: " + (appmodel.Form().Diabetic() ? "Yes" : "No") + linebreak;
    body += " %E2%80%A2 Smoker: " + (appmodel.Form().Smoker() ? "Yes" : "No") + linebreak;
    body += " %E2%80%A2 Treatment for Hypertension: " + (appmodel.Form().Hypertension() ? "Yes" : "No");
    return body;
}

var gaRecordMissingRecommendation = function() {
    console.log("gaRecordMissingRecommendation");
    gaWrapper("send", "event", "Navigate", "Clicked tab", "Missing Required");
};

var gaRecordRecommendation = function() {
    console.log("gaRecordRecommendation");
    var $tag = "undefined";
    var $race = appmodel.Form().Race();
    var $age = appmodel.Form().Age();
    var $sex = appmodel.Form().Sex();
    var $hdl = appmodel.Form().HDLCholesterol();
    var $tot = appmodel.Form().TotalCholesterol();
    var $bp = appmodel.Form().BloodPressure();
    var $unit = appmodel.Form().UnitOfMeasure() ? "US Measure" : "SI Measure";
    var $rec = appmodel.recommendationType().tag;
    gaWrapper("send", "event", "Primary Function", "Clicked tab", "Recommendation");
    gaWrapper("send", "event", "Patient", "Selected", $sex);
    gaWrapper("send", "event", "Patient", "Selected", $race);
    gaWrapper("send", "event", "Units", "Selected", $unit);
    gaWrapper("send", "event", "Primary Function", "Calculated", $rec);
    if ($age) {
        $tag = "undefined";
        if ($age >= 20 && $age <= 29) {
            $tag = "Age 20-29";
        } else if ($age >= 30 && $age <= 39) {
            $tag = "Age 30-39";
        } else if ($age >= 40 && $age <= 49) {
            $tag = "Age 40-49";
        } else if ($age >= 50 && $age <= 59) {
            $tag = "Age 50-59";
        } else if ($age >= 60 && $age <= 69) {
            $tag = "Age 60-69";
        } else if ($age >= 70 && $age <= 75) {
            $tag = "Age 70-75";
        } else if ($age >= 76 && $age <= 79) {
            $tag = "Age 76-79";
        }
        gaWrapper("send", "event", "Patient", "Selected", $tag);
    }
    if ($tot) {
        $tag = "undefined";
        if ($tot >= 130 && $tot <= 139) {
            $tag = "TChol 130-139 mm HG";
        } else if ($tot >= 140 && $tot <= 159) {
            $tag = "TChol 140-159 mgdl";
        } else if ($tot >= 160 && $tot <= 179) {
            $tag = "TChol 160-179 mgdl";
        } else if ($tot >= 180 && $tot <= 199) {
            $tag = "TChol 180-199 mgdl";
        } else if ($tot >= 200 && $tot <= 219) {
            $tag = "TChol 200-219 mgdl";
        } else if ($tot >= 220 && $tot <= 239) {
            $tag = "TChol 220-239 mgdl";
        } else if ($tot >= 240 && $tot <= 259) {
            $tag = "TChol 240-259 mgdl";
        } else if ($tot >= 260 && $tot <= 279) {
            $tag = "TChol 260-279 mgdl";
        } else if ($tot >= 280 && $tot <= 299) {
            $tag = "TChol 280-299 mgdl";
        } else if ($tot >= 300 && $tot <= 320) {
            $tag = "TChol 300-320 mgdl";
        }
        gaWrapper("send", "event", "Patient", "Selected", $tag);
    }
    if (appmodel.Form().HDLCholesterol()) {
        $tag = "undefined";
        if ($hdl >= 20 && $hdl <= 29) {
            $tag = "HDL 20-29 mgdl";
        } else if ($hdl >= 30 && $hdl <= 39) {
            $tag = "HDL 30-39 mgdl";
        } else if ($hdl >= 40 && $hdl <= 49) {
            $tag = "HDL 40-49 mgdl";
        } else if ($hdl >= 50 && $hdl <= 59) {
            $tag = "HDL 50-59 mgdl";
        } else if ($hdl >= 60 && $hdl <= 69) {
            $tag = "HDL 60-69 mgdl";
        } else if ($hdl >= 70 && $hdl <= 79) {
            $tag = "HDL 70-79 mgdl";
        } else if ($hdl >= 80 && $hdl <= 89) {
            $tag = "HDL 80-89 mgdl";
        } else if ($hdl >= 90 && $hdl <= 100) {
            $tag = "HDL 90-100 mgdl";
        }
        gaWrapper("send", "event", "Patient", "Selected", $tag);
    }
    if ($bp) {
        $tag = "undefined";
        if ($bp >= 90 && $bp <= 109) {
            $tag = "SBP 90-109 mm HG";
        } else if ($bp >= 110 && $bp <= 119) {
            $tag = "SBP 110-119 mm HG";
        } else if ($bp >= 120 && $bp <= 129) {
            $tag = "SBP 120-129 mm HG";
        } else if ($bp >= 130 && $bp <= 139) {
            $tag = "SBP 130-139 mm HG";
        } else if ($bp >= 140 && $bp <= 149) {
            $tag = "SBP 140-149 mm HG";
        } else if ($bp >= 150 && $bp <= 159) {
            $tag = "SBP 150-159 mm HG";
        } else if ($bp >= 160 && $bp <= 180) {
            $tag = "SBP 160-180 mm HG";
        } else if ($bp >= 181 && $bp <= 200) {
            $tag = "SBP 181-200 mm HG";
        }
        gaWrapper("send", "event", "Patient", "Selected", $tag);
    }
    if (appmodel.Form().Hypertension()) gaWrapper("send", "event", "Patient", "Selected", "Hypertension");
    if (appmodel.Form().Diabetic()) gaWrapper("send", "event", "Patient", "Selected", "Diabetic");
    if (appmodel.Form().Smoker()) gaWrapper("send", "event", "Patient", "Selected", "Smoker");
    gaWrapper("send", "event", "Recommendation", "Recommendation", appmodel.recommendationType().tag);
};
//# sourceMappingURL=application.min.js.map